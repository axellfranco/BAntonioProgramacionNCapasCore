@model ML.Usuario
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">

                <h2>Usuario</h2>

            </div>
        </div>

        <div class="row">
            <div class="col-md-12">

                <hr />
            </div>
        </div>

        <div class="row">
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="d-none col-md-3">

                            @Html.LabelFor(model => model.IdUsuario, new { @class = "hidden" })

                            @Html.TextBoxFor(model => model.IdUsuario, new { @class = "hidden form-control" })

                            @Html.ValidationMessageFor(model => model.IdUsuario)

                            @*hidden*@

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="bi bi-person col-md-3">

                            @Html.LabelFor(model => model.Nombre)

                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Nombre)

                        </div>


                        <div class="bi bi-person col-md-3">

                            @Html.LabelFor(model => model.ApellidoPaterno)

                            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.ApellidoPaterno)

                        </div>

                        <div class="bi bi-person col-md-3">

                            @Html.LabelFor(model => model.ApellidoMaterno)

                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.ApellidoMaterno)

                        </div>
                    </div>


                    <div class="form-group">
                        <div class="bi bi-person-circle col-md-3">

                            @Html.LabelFor(model => model.UserName)

                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.UserName)

                        </div>


                        <div class="bi bi-envelope col-md-3">

                            @Html.LabelFor(model => model.Email)

                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Email)

                        </div>

                        <div class="bi bi-lock-fill col-md-3">

                            @Html.LabelFor(model => model.Password)

                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Password)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="bi bi-calendar-event-fillw col-md-3">

                            @Html.LabelFor(model => model.FechaNacimiento)

                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.FechaNacimiento)

                        </div>
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Sexo)

                            @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Sexo)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="bi bi-telephone-fill col-md-3">

                            @Html.LabelFor(model => model.Telefono)

                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Telefono)

                        </div>
                        <div class="bi bi-phone-fill col-md-3">

                            @Html.LabelFor(model => model.Celuar)

                            @Html.TextBoxFor(model => model.Celuar, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Celuar)

                        </div>
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Curp)

                            @Html.TextBoxFor(model => model.Curp, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Curp)

                        </div>

                    </div>

                    <div class="form-group">


                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Rol)

                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.RolList, "IdRol", "Nombre"), "Selecciona una opcion", new { @class = "form-control", @id = "ddlRol" })

                            @Html.ValidationMessageFor(model => model.Rol.IdRol)

                        </div>

                        @*<div class="bi bi-file-image-fill col-md-3">

                            @Html.LabelFor(model => model.Imagen)

                            @Html.TextBoxFor(model => model.Imagen, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Imagen)

                            </div>*@

                        <div class="col-md-3">

                            @Html.LabelFor(model=> model.Imagen)

                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                                <input id="IFImage" type='file' class="form-control" name="IFImage" onchange="validateFile(this), readURL(this);  " />
                            </div>

                            @if (Model.Imagen != null)
                            {

                                <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />

                            }
                            else
                            {
                                <img id="Img" src="~/Imagenes/SinUsuario.png" style="width:250px ; height:250px" />
                            }


                        </div>
                        @Html.HiddenFor(model => model.Imagen)

                    </div>

                    <div class="form-group">
                        <div class="bi bi-person col-md-3">

                            @Html.LabelFor(model => model.Direccion.Calle)

                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Direccion.Calle)

                        </div>
                        <div class="bi bi-person col-md-3">

                            @Html.LabelFor(model => model.Direccion.NumeroInterior)

                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)

                        </div>
                        <div class="bi bi-person col-md-3">

                            @Html.LabelFor(model => model.Direccion.NumeroExterior)

                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)

                        </div>

                    </div>


                    <div class="form-group">

                        <div class="bi bi-person col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.Paises, new { @class = "control-label" })
                            @if (Model.Direccion.Colonia.Municipio.Estado.Pais.Paises == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Pais", htmlAttributes: new { id = "ddlPais", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un país", htmlAttributes: new { id = "ddlPais", @class = "form-control" })
                            }
                        </div>



                        <div class="bi bi-person col-md-3">

                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Estados, new { @class = "control-label" })
                            @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                            {

                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                            }


                            @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, null, new { @class = "text-danger" })


                        </div>



                        <div class="bi bi-person col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Municipios, new { @class = "control-label" })
                            @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona un municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                            }

                            @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, null, new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="row">
                        <div class="bi bi-person col-md-12">
                            @Html.LabelFor(model => model.Direccion.Colonia.Colonias, new { @class = "control-label" })
                            @if (Model.Direccion.Colonia.Colonias == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }
                        </div>
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia, null, new { @class = "text-danger" })
                    </div>
                    <br />


                </div>




                <div class="form-group">

                    <div class="col-md-3">

                        <input type="submit" value="Guardar" class="btn btn-success" />

                        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })

                    </div>

                </div>



            }

        </div>

    </div>

</div>

@section Scripts
{


<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>

<script type="text/javascript">
        $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEstado")',
                dataType: 'json',
                data: { IdPais: $("#ddlPais").val() },
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="'
                                                   + estados.idEstado + '">'
                                                   + estados.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });
</script>
<script type="text/javascript">
        $(document).ready(function () {
        $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="'
                                                   + municipios.idMunicipio+ '">'
                                                   + municipios.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });
</script>
<script type="text/javascript">
        $(document).ready(function () {
        $("#ddlMunicipio").change(function () {
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetColonia")',
                dataType: 'json',
                data: { IdMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                    $.each(colonias, function (i, colonias) {
                        $("#ddlColonia").append('<option value="'
                            + colonias.idColonia + '">'
                            + colonias.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });
</script>
}



